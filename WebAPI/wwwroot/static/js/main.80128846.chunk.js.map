{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/hooks/useProducts.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","logo/logo.png","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropzone.tsx","app/components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","put","createFormData","item","formData","FormData","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","handlePageChange","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","useProducts","products","selectAll","useEffect","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","disabled","updatedQuantity","ContactPage","HomePage","Fragment","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","margin","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","backgroundColor","Toolbar","marginLeft","paddingLeft","NavLink","exact","Logo","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","roles","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.80128846.chunk.js","sourcesContent":["export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","export function getCookie(key: string) {\r\n  const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n  return b ? b.pop() : \"\";\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n  return (amount/100).toFixed(2) + \" kr\";\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getCookie } from \"../../app/util/util\";\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\r\n    'basket/addBasketItemAsync',\r\n    async ({productId, quantity = 1}, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, \r\n    {productId: number, quantity: number, name?: string}>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({productId, quantity}, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const {productId, quantity} = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket?.items[itemIndex].quantity === 0) \r\n                state.basket.items.splice(itemIndex, 1);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n    })\r\n})\r\n\r\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { FieldValues } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { User } from \"../../app/models/user\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const {basket, ...user} = userDto;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/');\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - please login again');\r\n            history.push('/');\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\r\n            state.user = action.payload;\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        })\r\n    })\r\n})\r\n\r\nexport const {signOut, setUser} = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { MetaData } from \"../../app/models/pagination\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport { RootState } from \"../../app/store/configureStore\";\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n}\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', productParams.pageNumber.toString());\r\n    params.append('pageSize', productParams.pageSize.toString());\r\n    params.append('orderBy', productParams.orderBy);\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n        try {\r\n            const response = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: []\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1};\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload};\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        },\r\n        setProduct: (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.productsLoaded = false;\r\n        },\r\n        removeProduct: (state, action) => {\r\n            productsAdapter.removeOne(state, action.payload);\r\n            state.productsLoaded = false;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct';\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters';\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        })\r\n    })\r\n})\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber, setProduct, removeProduct} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport interface CounterState{\r\n    data:number,\r\n    title:string\r\n}\r\nconst initialState:CounterState={\r\n    data:42,\r\n    title:\"Ahmed med redux toolkit\"\r\n}\r\nexport const counterSlice=createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n\r\n        increment:(state,action)=>{\r\n            state.data +=action.payload\r\n        },\r\n         decrement:(state,action)=>{\r\n            state.data -=action.payload\r\n        }\r\n    }\r\n});\r\nexport const {increment,decrement}=counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { accountSlice } from \"../../features/account/accountSlice\";\r\nimport { basketSlice } from \"../../features/basket/basketSlice\";\r\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer);\r\n// }\r\n\r\nexport const store = configureStore({\r\nreducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/pagination\";\r\nimport { store } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n        return response;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 403:\r\n            toast.error('You are not allowed to do that!');\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: {error: data}\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\r\n        headers: {'Content-type': 'multipart/form-data'}\r\n    }).then(responseBody),\r\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\r\n        headers: {'Content-type': 'multipart/form-data'}\r\n    }).then(responseBody)\r\n}\r\n\r\nfunction createFormData(item: any) {\r\n    let formData = new FormData();\r\n    for (const key in item) {\r\n        formData.append(key, item[key])\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst Admin = {\r\n    createProduct: (product: any) => requests.postForm('products', createFormData(product)),\r\n    updateProduct: (product: any) => requests.putForm('products', createFormData(product)),\r\n    deleteProduct: (id: number) => requests.delete(`products/${id}`)\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorised'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders', values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments,\r\n    Admin\r\n}\r\n\r\nexport default agent;","import {\r\n  Alert,\r\n  AlertTitle,\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useState } from 'react';\r\nimport agent from '../../app/api/agent';\r\n\r\nexport default function AboutPage() {\r\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n  function getValidationError() {\r\n    agent.TestErrors.getValidationError()\r\n      .then(() => console.log('should not see this'))\r\n      .catch((error) => setValidationErrors(error));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography gutterBottom variant=\"h2\">\r\n        Errors for testing purposes\r\n      </Typography>\r\n      <ButtonGroup fullWidth>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get400Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 400 Error\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get401Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 401 Error\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get404Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 404 Error\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get500Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 500 Error\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={getValidationError}>\r\n          Test Validation Error\r\n        </Button>\r\n      </ButtonGroup>\r\n      {validationErrors.length > 0 && (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Validation Errors</AlertTitle>\r\n          <List>\r\n            {validationErrors.map((error) => (\r\n              <ListItem key={error}>\r\n                <ListItemText>{error}</ListItemText>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { Typography, Pagination } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { useState } from 'react';\r\nimport { MetaData } from '../models/pagination';\r\n\r\ninterface Props {\r\n  metaData: MetaData;\r\n  onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({ metaData, onPageChange }: Props) {\r\n  const { currentPage, totalCount, totalPages, pageSize } = metaData;\r\n  const [pageNumber, setPageNumber] = useState(currentPage);\r\n\r\n  function handlePageChange(page: number) {\r\n    setPageNumber(page);\r\n    onPageChange(page);\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Typography>\r\n        Displaying {(currentPage - 1) * pageSize + 1}-\r\n        {currentPage * pageSize > totalCount\r\n          ? totalCount\r\n          : currentPage * pageSize}{' '}\r\n        of {totalCount} items\r\n      </Typography>\r\n      <Pagination\r\n        color=\"secondary\"\r\n        size=\"large\"\r\n        count={totalPages}\r\n        page={pageNumber}\r\n        onChange={(e, page) => handlePageChange(page)}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\r\nimport { useState } from 'react';\r\n\r\ninterface Props {\r\n  items: string[];\r\n  checked?: string[];\r\n  onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({ items, checked, onChange }: Props) {\r\n  const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n  function handleChecked(value: string) {\r\n    const currentIndex = checkedItems.findIndex((item) => item === value);\r\n    let newChecked: string[] = [];\r\n    if (currentIndex === -1) newChecked = [...checkedItems, value];\r\n    else newChecked = checkedItems.filter((item) => item !== value);\r\n    setCheckedItems(newChecked);\r\n    onChange(newChecked);\r\n  }\r\n\r\n  return (\r\n    <FormGroup>\r\n      {items.map((item) => (\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={checkedItems.indexOf(item) !== -1}\r\n              onClick={() => handleChecked(item)}\r\n            />\r\n          }\r\n          label={item}\r\n          key={item}\r\n        />\r\n      ))}\r\n    </FormGroup>\r\n  );\r\n}\r\n","import {\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  options: any[];\r\n  onChange: (event: any) => void;\r\n  selectedValue: string;\r\n}\r\n\r\nexport default function RadioButtonGroup({\r\n  options,\r\n  onChange,\r\n  selectedValue,\r\n}: Props) {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <RadioGroup onChange={onChange} value={selectedValue}>\r\n        {options.map(({ value, label }) => (\r\n          <FormControlLabel\r\n            value={value}\r\n            control={<Radio />}\r\n            label={label}\r\n            key={value}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport {\r\n  productSelectors,\r\n  fetchProductsAsync,\r\n  fetchFilters,\r\n} from '../../features/catalog/catalogSlice';\r\nimport { useAppSelector, useAppDispatch } from '../store/configureStore';\r\n\r\nexport default function useProducts() {\r\n  const products = useAppSelector(productSelectors.selectAll);\r\n  const { productsLoaded, filtersLoaded, brands, types, metaData } =\r\n    useAppSelector((state) => state.catalog);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!productsLoaded) dispatch(fetchProductsAsync());\r\n  }, [productsLoaded, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!filtersLoaded) dispatch(fetchFilters());\r\n  }, [filtersLoaded, dispatch]);\r\n\r\n  return {\r\n    products,\r\n    productsLoaded,\r\n    filtersLoaded,\r\n    brands,\r\n    types,\r\n    metaData,\r\n  };\r\n}\r\n","import { Backdrop, CircularProgress, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n\r\ninterface Props {\r\n  message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ message = 'Loading...' }: Props) {\r\n  return (\r\n    <Backdrop open={true} invisible={true}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        height=\"100vh\"\r\n      >\r\n        <CircularProgress size={100} color=\"secondary\" />\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{ justifyContent: 'center', position: 'fixed', top: '60%' }}\r\n        >\r\n          {message}\r\n        </Typography>\r\n      </Box>\r\n    </Backdrop>\r\n  );\r\n}\r\n","import { LoadingButton } from '@mui/lab';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport { addBasketItemAsync } from '../basket/basketSlice';\r\n\r\ninterface Props {\r\n  product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n  const { status } = useAppSelector((state) => state.basket);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n            {product.name.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        title={product.name}\r\n        titleTypographyProps={{\r\n          sx: { fontWeight: 'bold', color: 'primary.main' },\r\n        }}\r\n      />\r\n      <CardMedia\r\n        sx={{\r\n          height: 140,\r\n          backgroundSize: 'contain',\r\n         /*  bgcolor: 'primary.light', */\r\n        }}\r\n        image={product.pictureUrl}\r\n        title={product.name}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom color=\"secondary\" variant=\"h5\">\r\n          {currencyFormat(product.price)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {product.brand} / {product.type}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <LoadingButton\r\n          loading={status.includes('pendingAddItem' + product.id)}\r\n          onClick={() =>\r\n            dispatch(addBasketItemAsync({ productId: product.id }))\r\n          }\r\n          size=\"small\"\r\n        >\r\n          Add to cart\r\n        </LoadingButton>\r\n        <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">\r\n          View\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  Skeleton,\r\n} from '@mui/material';\r\n\r\nexport default function ProductCardSkeleton() {\r\n  return (\r\n    <Grid item xs component={Card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Skeleton\r\n            animation=\"wave\"\r\n            variant=\"circular\"\r\n            width={40}\r\n            height={40}\r\n          />\r\n        }\r\n        title={\r\n          <Skeleton\r\n            animation=\"wave\"\r\n            height={10}\r\n            width=\"80%\"\r\n            style={{ marginBottom: 6 }}\r\n          />\r\n        }\r\n      />\r\n      <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n      <CardContent>\r\n        <>\r\n          <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n          <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n        </>\r\n      </CardContent>\r\n      <CardActions>\r\n        <>\r\n          <Skeleton animation=\"wave\" height={10} width=\"40%\" />\r\n          <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n        </>\r\n      </CardActions>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Grid } from '@mui/material';\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport ProductCard from './ProductCard';\r\nimport ProductCardSkeleton from './ProductCardSkeleton';\r\n\r\ninterface Props {\r\n  products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n  const { productsLoaded } = useAppSelector((state) => state.catalog);\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {products.map((product) => (\r\n        <Grid item xs={4} key={product.id}>\r\n          {!productsLoaded ? (\r\n            <ProductCardSkeleton />\r\n          ) : (\r\n            <ProductCard product={product} />\r\n          )}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import { debounce, TextField } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { setProductParams } from './catalogSlice';\r\n\r\nexport default function ProductSearch() {\r\n  const { productParams } = useAppSelector((state) => state.catalog);\r\n  const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const debouncedSearch = debounce((event: any) => {\r\n    dispatch(setProductParams({ searchTerm: event.target.value }));\r\n  }, 1000);\r\n\r\n  return (\r\n    <TextField\r\n      label=\"Search products\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      value={searchTerm || ''}\r\n      onChange={(event: any) => {\r\n        setSearchTerm(event.target.value);\r\n        debouncedSearch(event);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { Grid, Paper } from '@mui/material';\r\nimport AppPagination from '../../app/components/AppPagination';\r\nimport CheckboxButtons from '../../app/components/CheckboxButtons';\r\nimport RadioButtonGroup from '../../app/components/RadioButtonGroup';\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { setPageNumber, setProductParams } from './catalogSlice';\r\nimport ProductList from './ProductList';\r\nimport ProductSearch from './ProductSearch';\r\n\r\nconst sortOptions = [\r\n  { value: 'name', label: 'Alphabetical' },\r\n  { value: 'priceDesc', label: 'Price - High to low' },\r\n  { value: 'price', label: 'Price - Low to high' },\r\n];\r\n\r\nexport default function Catalog() {\r\n  const { products, brands, types, filtersLoaded, metaData } = useProducts();\r\n  const { productParams } = useAppSelector((state) => state.catalog);\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (!filtersLoaded) return <LoadingComponent message=\"Loading products...\" />;\r\n\r\n  return (\r\n    <Grid container columnSpacing={4}>\r\n      <Grid item xs={3}>\r\n        <Paper sx={{ mb: 2 }}>\r\n          <ProductSearch />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <RadioButtonGroup\r\n            selectedValue={productParams.orderBy}\r\n            options={sortOptions}\r\n            onChange={(e) =>\r\n              dispatch(setProductParams({ orderBy: e.target.value }))\r\n            }\r\n          />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <CheckboxButtons\r\n            items={brands}\r\n            checked={productParams.brands}\r\n            onChange={(items: string[]) =>\r\n              dispatch(setProductParams({ brands: items }))\r\n            }\r\n          />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <CheckboxButtons\r\n            items={types}\r\n            checked={productParams.types}\r\n            onChange={(items: string[]) =>\r\n              dispatch(setProductParams({ types: items }))\r\n            }\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <ProductList products={products} />\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n      <Grid item xs={9} sx={{ mb: 2 }}>\r\n        {metaData && (\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) =>\r\n              dispatch(setPageNumber({ pageNumber: page }))\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Container component={Paper} sx={{ height: 400 }}>\r\n      <Typography gutterBottom variant=\"h3\">\r\n        Oops - we could not find what you are looking for\r\n      </Typography>\r\n      <Divider />\r\n      <Button fullWidth component={Link} to=\"/catalog\">\r\n        Go back to shop\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import { LoadingButton } from '@mui/lab';\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport NotFound from '../../app/errors/NotFound';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport {\r\n  addBasketItemAsync,\r\n  removeBasketItemAsync,\r\n} from '../basket/basketSlice';\r\nimport { fetchProductAsync, productSelectors } from './catalogSlice';\r\n\r\nexport default function ProductDetails() {\r\n  const { basket, status } = useAppSelector((state) => state.basket);\r\n  const dispatch = useAppDispatch();\r\n  const { id } = useParams<{ id: string }>();\r\n  const product = useAppSelector((state) =>\r\n    productSelectors.selectById(state, id)\r\n  );\r\n  const { status: productStatus } = useAppSelector((state) => state.catalog);\r\n  const [quantity, setQuantity] = useState(0);\r\n  const item = basket?.items.find((i) => i.productId === product?.id);\r\n\r\n  useEffect(() => {\r\n    if (item) setQuantity(item.quantity);\r\n    if (!product) dispatch(fetchProductAsync(parseInt(id)));\r\n  }, [id, item, dispatch, product]);\r\n\r\n  function handleInputChange(event: any) {\r\n    if (event.target.value > 0) {\r\n      setQuantity(parseInt(event.target.value));\r\n    }\r\n  }\r\n\r\n  function handleUpdateCart() {\r\n    if (!item || quantity > item.quantity) {\r\n      const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n      dispatch(\r\n        addBasketItemAsync({\r\n          productId: product?.id!,\r\n          quantity: updatedQuantity,\r\n        })\r\n      );\r\n    } else {\r\n      const updatedQuantity = item.quantity - quantity;\r\n      dispatch(\r\n        removeBasketItemAsync({\r\n          productId: product?.id!,\r\n          quantity: updatedQuantity,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  if (productStatus.includes('pending'))\r\n    return <LoadingComponent message=\"Loading product...\" />;\r\n\r\n  if (!product) return <NotFound />;\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      <Grid item xs={6}>\r\n        <img\r\n          src={product.pictureUrl}\r\n          alt={product.name}\r\n          style={{ width: '100%' }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"h3\">{product.name}</Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Typography variant=\"h4\" color=\"secondary\">\r\n          {(product.price / 100).toFixed(2)} kr\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>{product.name}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>{product.description}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>{product.type}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Brand</TableCell>\r\n                <TableCell>{product.brand}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Quantity in stock</TableCell>\r\n                <TableCell>{product.quantity}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              label=\"Quantity in Cart\"\r\n              fullWidth\r\n              value={quantity}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <LoadingButton\r\n              disabled={item?.quantity === quantity}\r\n              loading={status.includes('pending')}\r\n              onClick={handleUpdateCart}\r\n              sx={{ height: '55px' }}\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              {item ? 'Update Quantity' : 'Add to Cart'}\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Button, ButtonGroup, Typography } from '@mui/material';\r\n//import { useDispatch, useSelector } from 'react-redux';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { increment,decrement } from './counterSlice';\r\n//import { CounterState, increment, decrement } from './counterReducer';\r\n\r\nexport default function ContactPage() {\r\n  //const {data,title}=useSelector((state:CounterState)=>state);\r\n  const { data, title } = useAppSelector(state=>state.counter);\r\n  //const dispatch=useDispatch();\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <>\r\n      <Typography variant=\"h2\">{data}</Typography>\r\n      <Typography variant=\"h2\">{title}</Typography>\r\n\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(increment(1))}\r\n        >\r\n          Increment\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          onClick={() => dispatch(decrement(1))}\r\n        >\r\n          Decrement\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => dispatch(increment(5))}\r\n        >\r\n          Increment by 5\r\n        </Button>\r\n      </ButtonGroup>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport React from 'react';\r\nimport Slider from 'react-slick';\r\n\r\nexport default function HomePage() {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Slider {...settings}>\r\n        <div>\r\n          <img\r\n            src=\"/images/products/imac27__evbw33241ouq_large.jpg\"\r\n            alt=\"hero\"\r\n            style={{\r\n              display: 'block',\r\n              width: '65%',\r\n              maxHeight: 500,\r\n              margin: 'auto',\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <img\r\n            src=\"/images/products/product_4_20180409144850_5acb0cd2459a2.png\"\r\n            alt=\"hero\"\r\n            style={{\r\n              display: 'block',\r\n              width: '65%',\r\n              maxHeight: 500,\r\n              margin: 'auto',\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <img\r\n            src=\"/images/products/product_1606361872db9d1d807e75b0f58f01eae5b3ded9fc.png\"\r\n            alt=\"hero\"\r\n            style={{\r\n              display: 'block',\r\n              width: '65%',\r\n              maxHeight: 500,\r\n              margin: 'auto',\r\n            }}\r\n          />\r\n        </div>\r\n      </Slider>\r\n      <Box display=\"flex\" justifyContent=\"center\" sx={{ p: 4 }}>\r\n        <Typography variant=\"h2\">Welcome to the Gothenburg Computer</Typography>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.590e87ef.png\";","import { Button, Menu, Fade, MenuItem } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore';\r\n\r\nexport default function SignedInMenu() {\r\n  const dispatch = useAppDispatch();\r\n  const { user } = useAppSelector((state) => state.account);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color=\"inherit\" onClick={handleClick} sx={{ typography: 'h6' }}>\r\n        {user?.email}\r\n      </Button>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem component={Link} to=\"/orders\">\r\n          My orders\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            dispatch(signOut());\r\n            dispatch(clearBasket());\r\n          }}\r\n        >\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  CardMedia,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Switch,\r\n  Toolbar,\r\n  Typography,\r\n} from '@mui/material';\r\nimport Logo from '../../logo/logo.png';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useAppSelector } from '../store/configureStore';\r\nimport SignedInMenu from './SignedInMenu';\r\n\r\ninterface Props {\r\n  darkMode: boolean;\r\n  handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n  { title: 'Products', path: '/catalog' },\r\n  { title: 'about', path: '/about' },\r\n  { title: 'contact', path: '/contact' },\r\n];\r\n\r\nconst rightLinks = [\r\n  { title: 'login', path: '/login' },\r\n  { title: 'register', path: '/register' },\r\n];\r\n\r\nconst navStyles = {\r\n  color: 'inherit',\r\n  textDecoration: 'none',\r\n  typography: 'h6',\r\n  '&:hover': {\r\n    color: 'grey.500',\r\n  },\r\n  '&.active': {\r\n    color: 'text.secondary',\r\n  },\r\n};\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n   const { user } = useAppSelector((state) => state.account);\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n  const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n  return (\r\n    <AppBar position=\"static\" style={{ backgroundColor: '#d02552' }}>\r\n      <Toolbar\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n        }}\r\n        style={{ marginLeft: 0, paddingLeft: 0 }}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n            component={NavLink}\r\n            exact\r\n            to=\"/\"\r\n            sx={navStyles}\r\n          >\r\n            <CardMedia\r\n              sx={{\r\n                height: 63,\r\n                width: 230,\r\n              }}\r\n              image={Logo}\r\n              title=\"logo\"\r\n            />\r\n          </Typography>\r\n          <Switch checked={darkMode} onChange={handleThemeChange} />\r\n        </Box>\r\n        <List sx={{ display: 'flex' }}>\r\n          {midLinks.map(({ title, path }) => (\r\n            <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n              {title.toUpperCase()}\r\n            </ListItem>\r\n          ))}\r\n          {user && (\r\n            <ListItem component={NavLink} to={'/inventory'} sx={navStyles}>\r\n              INVENTORY\r\n            </ListItem>\r\n          )}\r\n          {/* user.roles?.includes('Admin') && */}\r\n        </List>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconButton\r\n            component={Link}\r\n            to=\"/basket\"\r\n            size=\"large\"\r\n            sx={{ color: 'inherit' }}\r\n          >\r\n            <Badge badgeContent={itemCount} color=\"secondary\">\r\n              <ShoppingCart />\r\n            </Badge>\r\n          </IconButton>\r\n          {user ? (\r\n            <SignedInMenu />\r\n          ) : (\r\n            <List sx={{ display: 'flex' }}>\r\n              {rightLinks.map(({ title, path }) => (\r\n                <ListItem\r\n                  component={NavLink}\r\n                  to={path}\r\n                  key={path}\r\n                  sx={navStyles}\r\n                >\r\n                  {title.toUpperCase()}\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from '@mui/material';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nexport default function ServerError() {\r\n  const history = useHistory();\r\n  const { state } = useLocation<any>();\r\n\r\n  return (\r\n    <Container component={Paper}>\r\n      {state?.error ? (\r\n        <>\r\n          <Typography variant=\"h3\" color=\"error\" gutterBottom>\r\n            {state.error.title}\r\n          </Typography>\r\n          <Divider />\r\n          <Typography>\r\n            {state.error.detail || 'Internal server error'}\r\n          </Typography>\r\n        </>\r\n      ) : (\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Server Error\r\n        </Typography>\r\n      )}\r\n      <Button onClick={() => history.push('/catalog')}>\r\n        Go back to the store\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from '@mui/material';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\n\r\ninterface Props {\r\n  subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n  if (subtotal === undefined)\r\n    subtotal =\r\n      basket?.items.reduce(\r\n        (sum, item) => sum + item.quantity * item.price,\r\n        0\r\n      ) ?? 0;\r\n  const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} variant={'outlined'}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Subtotal</TableCell>\r\n              <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n              <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Total</TableCell>\r\n              <TableCell align=\"right\">\r\n                {currencyFormat(subtotal + deliveryFee)}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>\r\n                <span style={{ fontStyle: 'italic' }}>\r\n                  *Orders over 100 kr qualify for free delivery\r\n                </span>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({ items, isBasket = true }: Props) {\r\n    const { status } = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                            <TableCell align=\"right\"></TableCell>}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map(item => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{(item.price / 100).toFixed(2)} kr</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Remove />\r\n                                    </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingAddItem' + item.productId}\r\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                        color='secondary'\r\n                                    >\r\n                                        <Add />\r\n                                    </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{((item.price / 100) * item.quantity).toFixed(2)} kr</TableCell>\r\n                            {isBasket &&\r\n                                <TableCell align=\"right\">\r\n                                    <LoadingButton\r\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))}\r\n                                        color='error'\r\n                                    >\r\n                                        <Delete />\r\n                                    </LoadingButton>\r\n                                </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { Button, Grid, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from './BasketSummary';\r\nimport BasketTable from './BasketTable';\r\n\r\nexport default function BasketPage() {\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n\r\n  if (!basket)\r\n    return <Typography variant=\"h3\">Your basket is empty</Typography>;\r\n\r\n  return (\r\n    <>\r\n      <BasketTable items={basket.items} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n          <Button\r\n            component={Link}\r\n            to=\"/checkout\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const location = useLocation<any>();\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors, isValid },\r\n  } = useForm({\r\n    mode: 'all',\r\n  });\r\n\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      await dispatch(signInUser(data));\r\n      history.push(location.state?.from?.pathname || '/catalog');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth=\"sm\"\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        p: 4,\r\n      }}\r\n    >\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={handleSubmit(submitForm)}\r\n        noValidate\r\n        sx={{ mt: 1 }}\r\n      >\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Username\"\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          {...register('password', { required: 'Password is required' })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message}\r\n        />\r\n        <LoadingButton\r\n          disabled={!isValid}\r\n          loading={isSubmitting}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Sign In\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Register() {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { isSubmitting, errors, isValid },\r\n  } = useForm({\r\n    mode: 'all',\r\n  });\r\n\r\n  function handleApiErrors(errors: any) {\r\n    if (errors) {\r\n      errors.forEach((error: string) => {\r\n        if (error.includes('Password')) {\r\n          setError('password', { message: error });\r\n        } else if (error.includes('Email')) {\r\n          setError('email', { message: error });\r\n        } else if (error.includes('Username')) {\r\n          setError('username', { message: error });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth=\"sm\"\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        p: 4,\r\n      }}\r\n    >\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Register\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={handleSubmit((data) =>\r\n          agent.Account.register(data)\r\n            .then(() => {\r\n              toast.success('Registration successful - you can now login');\r\n              history.push('/login');\r\n            })\r\n            .catch((error) => handleApiErrors(error))\r\n        )}\r\n        noValidate\r\n        sx={{ mt: 1 }}\r\n      >\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Username\"\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Email address\"\r\n          {...register('email', {\r\n            required: 'Email is required',\r\n            pattern: {\r\n              value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*)).[a-z]{2,3}$/,\r\n              message: 'Not a valid email address',\r\n            },\r\n          })}\r\n          error={!!errors.email}\r\n          helperText={errors?.email?.message}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          {...register('password', {\r\n            required: 'Password is required',\r\n            pattern: {\r\n              value:\r\n                /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n              message: 'Password is not complex enough',\r\n            },\r\n          })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message}\r\n        />\r\n        <LoadingButton\r\n          disabled={!isValid}\r\n          loading={isSubmitting}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Register\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Link to=\"/login\">{'Already have an account? Sign In'}</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import { ComponentType } from 'react';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { useAppSelector } from '../store/configureStore';\r\n\r\ninterface Props extends RouteProps {\r\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n  roles?: string[];\r\n}\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  roles,\r\n  ...rest\r\n}: Props) {\r\n  const { user } = useAppSelector((state) => state.account);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!user) {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: '/login', state: { from: props.location } }}\r\n            />\r\n          );\r\n        }\r\n\r\n        if (roles && !roles?.some((r) => user.roles?.includes(r))) {\r\n          toast.error('Not authorised to access this area');\r\n          return <Redirect to={{ pathname: '/catalog' }} />;\r\n        }\r\n\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { Button, Grid, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { BasketItem } from '../../app/models/basket';\r\nimport { Order } from '../../app/models/order';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\ninterface Props {\r\n  order: Order;\r\n  setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n  const subtotal =\r\n    order.orderItems.reduce(\r\n      (sum, item) => sum + item.quantity * item.price,\r\n      0\r\n    ) ?? 0;\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography sx={{ p: 2 }} gutterBottom variant=\"h4\">\r\n          Order# {order.id} - {order.orderStatus}\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setSelectedOrder(0)}\r\n          sx={{ m: 2 }}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n        >\r\n          Back to orders\r\n        </Button>\r\n      </Box>\r\n      <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary subtotal={subtotal} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport agent from '../../app/api/agent';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { Order } from '../../app/models/order';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport OrderDetailed from './OrderDetailed';\r\n\r\nexport default function Orders() {\r\n  const [orders, setOrders] = useState<Order[] | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    agent.Orders.list()\r\n      .then((orders) => setOrders(orders))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  if (loading) return <LoadingComponent message=\"Loading orders\" />;\r\n\r\n  if (selectedOrderNumber > 0)\r\n    return (\r\n      <OrderDetailed\r\n        order={orders?.find((o) => o.id === selectedOrderNumber)!}\r\n        setSelectedOrder={setSelectedOrderNumber}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Order number</TableCell>\r\n            <TableCell align=\"right\">Total</TableCell>\r\n            <TableCell align=\"right\">Order Date</TableCell>\r\n            <TableCell align=\"right\">Order Status</TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders?.map((order) => (\r\n            <TableRow\r\n              key={order.id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {order.id}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {order.orderDate.split('T')[0]}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                  View\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { TextField } from '@mui/material';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n  label: string;\r\n  multiline?: boolean;\r\n  rows?: number;\r\n  type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n  const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      multiline={props.multiline}\r\n      rows={props.rows}\r\n      type={props.type}\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      error={!!fieldState.error}\r\n      helperText={fieldState.error?.message}\r\n    />\r\n  );\r\n}\r\n","import { Checkbox, FormControlLabel } from '@mui/material';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n  label: string;\r\n  disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n  const { field } = useController({ ...props, defaultValue: false });\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          {...field}\r\n          checked={field.value}\r\n          color=\"secondary\"\r\n          disabled={props.disabled}\r\n        />\r\n      }\r\n      label={props.label}\r\n    />\r\n  );\r\n}\r\n","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport AppCheckbox from '../../app/components/AppCheckbox';\r\n\r\nexport default function AddressForm() {\r\n  const { control, formState } = useFormContext();\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <AppTextInput control={control} name=\"fullName\" label=\"Full name\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput\r\n            control={control}\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput\r\n            control={control}\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"city\" label=\"City\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"state\" label=\"State\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"zip\" label=\"Zipcode\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"country\" label=\"Country\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppCheckbox\r\n            disabled={!formState.isDirty}\r\n            name=\"saveAddress\"\r\n            label=\"Save this as the default address\"\r\n            control={control}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, \r\n    ref: Ref<unknown>){\r\n        const elementRef = useRef<any>();\r\n\r\n        useImperativeHandle(ref, () => ({\r\n            focus: () => elementRef.current.focus\r\n        }));\r\n\r\n        return (\r\n            <Component \r\n                onReady={(element: any) => elementRef.current = element}\r\n                {...props}\r\n            />\r\n        )\r\n    });","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: { elementError: { [key in StripeElementType]?: string } };\r\n  onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket && <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is required'),\r\n        address1: yup.string().required('Addres line 1 is required'),\r\n        address2: yup.string().required(),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.string().required(),\r\n        country: yup.string().required(),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n] ","import {\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { FieldValues, FormProvider, useForm } from 'react-hook-form';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from './checkoutValidation';\r\nimport agent from '../../app/api/agent';\r\nimport { clearBasket } from '../basket/basketSlice';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\nimport {\r\n  CardNumberElement,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [orderNumber, setOrderNumber] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const [cardState, setCardState] = useState<{\r\n    elementError: { [key in StripeElementType]?: string };\r\n  }>({ elementError: {} });\r\n  const [cardComplete, setCardComplete] = useState<any>({\r\n    cardNumber: false,\r\n    cardExpiry: false,\r\n    cardCvc: false,\r\n  });\r\n  const [paymentMessage, setPaymentMessage] = useState('');\r\n  const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  function onCardInputChange(event: any) {\r\n    setCardState({\r\n      ...cardState,\r\n      elementError: {\r\n        ...cardState.elementError,\r\n        [event.elementType]: event.error?.message,\r\n      },\r\n    });\r\n    setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\r\n  }\r\n\r\n  function getStepContent(step: number) {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddressForm />;\r\n      case 1:\r\n        return <Review />;\r\n      case 2:\r\n        return (\r\n          <PaymentForm\r\n            cardState={cardState}\r\n            onCardInputChange={onCardInputChange}\r\n          />\r\n        );\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n\r\n  const currentValidationSchema = validationSchema[activeStep];\r\n\r\n  const methods = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(currentValidationSchema),\r\n  });\r\n\r\n  useEffect(() => {\r\n    agent.Account.fetchAddress().then((response) => {\r\n      if (response) {\r\n        methods.reset({\r\n          ...methods.getValues(),\r\n          ...response,\r\n          saveAddress: false,\r\n        });\r\n      }\r\n    });\r\n  }, [methods]);\r\n\r\n  async function submitOrder(data: FieldValues) {\r\n    setLoading(true);\r\n    const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n    if (!stripe || !elements) return; // stripe not ready\r\n    try {\r\n      const cardElement = elements.getElement(CardNumberElement);\r\n      const paymentResult = await stripe.confirmCardPayment(\r\n        basket?.clientSecret!,\r\n        {\r\n          payment_method: {\r\n            card: cardElement!,\r\n            billing_details: {\r\n              name: nameOnCard,\r\n            },\r\n          },\r\n        }\r\n      );\r\n      console.log(paymentResult);\r\n      if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n        const orderNumber = await agent.Orders.create({\r\n          saveAddress,\r\n          shippingAddress,\r\n        });\r\n        setOrderNumber(orderNumber);\r\n        setPaymentSucceeded(true);\r\n        setPaymentMessage('Thank you - we have received your payment');\r\n        setActiveStep(activeStep + 1);\r\n        dispatch(clearBasket());\r\n        setLoading(false);\r\n      } else {\r\n        setPaymentMessage(paymentResult.error?.message!);\r\n        setPaymentSucceeded(false);\r\n        setLoading(false);\r\n        setActiveStep(activeStep + 1);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleNext = async (data: FieldValues) => {\r\n    if (activeStep === steps.length - 1) {\r\n      await submitOrder(data);\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  function submitDisabled(): boolean {\r\n    if (activeStep === steps.length - 1) {\r\n      return (\r\n        !cardComplete.cardCvc ||\r\n        !cardComplete.cardExpiry ||\r\n        !cardComplete.cardNumber ||\r\n        !methods.formState.isValid\r\n      );\r\n    } else {\r\n      return !methods.formState.isValid;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Paper\r\n        variant=\"outlined\"\r\n        sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n          Checkout\r\n        </Typography>\r\n        <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <>\r\n          {activeStep === steps.length ? (\r\n            <>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                {paymentMessage}\r\n              </Typography>\r\n              {paymentSucceeded ? (\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #{orderNumber}. We have not emailed your\r\n                  order confirmation, and will not send you an update when your\r\n                  order has shipped as this is a fake store!\r\n                </Typography>\r\n              ) : (\r\n                <Button variant=\"contained\" onClick={handleBack}>\r\n                  Go back and try again\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <form onSubmit={methods.handleSubmit(handleNext)}>\r\n              {getStepContent(activeStep)}\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                {activeStep !== 0 && (\r\n                  <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n                <LoadingButton\r\n                  loading={loading}\r\n                  disabled={submitDisabled()}\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  sx={{ mt: 3, ml: 1 }}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                </LoadingButton>\r\n              </Box>\r\n            </form>\r\n          )}\r\n        </>\r\n      </Paper>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51KJhWBI1yBuGX08LRQ5II1nRzDyl8IE9H7FaNXvHwJ8WEWLdEZyfjp67WUxrk1Pzpjc2bv7zqVo6QfVCEi26vTED00H7ory8I9\")\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...' />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n}","import { UploadFile } from '@mui/icons-material';\r\nimport { FormControl, FormHelperText, Typography } from '@mui/material';\r\nimport { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {}\r\n\r\nexport default function AppDropzone(props: Props) {\r\n  const { fieldState, field } = useController({ ...props, defaultValue: null });\r\n\r\n  const dzStyles = {\r\n    display: 'flex',\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    alignItems: 'center',\r\n    height: 200,\r\n    width: 500,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: 'green',\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      acceptedFiles[0] = Object.assign(acceptedFiles[0], {\r\n        preview: URL.createObjectURL(acceptedFiles[0]),\r\n      });\r\n      field.onChange(acceptedFiles[0]);\r\n    },\r\n    [field]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <FormControl\r\n        error={!!fieldState.error}\r\n        style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <UploadFile sx={{ fontSize: '100px' }} />\r\n        <Typography variant=\"h4\">Drop image here</Typography>\r\n        <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n  label: string;\r\n  items: string[];\r\n}\r\n\r\nexport default function AppSelectList(props: Props) {\r\n  const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n  return (\r\n    <FormControl fullWidth error={!!fieldState.error}>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <Select value={field.value} label={props.label} onChange={field.onChange}>\r\n        {props.items.map((item, index) => (\r\n          <MenuItem key={index} value={item}>\r\n            {item}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n  name: yup.string().required(),\r\n  brand: yup.string().required(),\r\n  type: yup.string().required(),\r\n  price: yup.number().required().moreThan(100),\r\n  quantity: yup.number().required().min(0),\r\n  description: yup.string().required(),\r\n  file: yup.mixed().when('pictureUrl', {\r\n    is: (value: string) => !value,\r\n    then: yup.mixed().required('Please provide an image'),\r\n  }),\r\n});\r\n","import { Typography, Grid, Paper, Box, Button } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport AppDropzone from '../../app/components/AppDropzone';\r\nimport AppSelectList from '../../app/components/AppSelectList';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport { Product } from '../../app/models/product';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from './productValidation';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { setProduct } from '../catalog/catalogSlice';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\ninterface Props {\r\n  product?: Product;\r\n  cancelEdit: () => void;\r\n}\r\n\r\nexport default function ProductForm({ product, cancelEdit }: Props) {\r\n  const {\r\n    control,\r\n    reset,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { isDirty, isSubmitting },\r\n  } = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver<any>(validationSchema),\r\n  });\r\n  const { brands, types } = useProducts();\r\n  const watchFile = watch('file', null);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (product && !watchFile && !isDirty) reset(product);\r\n    return () => {\r\n      if (watchFile) URL.revokeObjectURL(watchFile.preview);\r\n    };\r\n  }, [product, reset, watchFile, isDirty]);\r\n\r\n  async function handleSubmitData(data: FieldValues) {\r\n    try {\r\n      let response: Product;\r\n      if (product) {\r\n        response = await agent.Admin.updateProduct(data);\r\n      } else {\r\n        response = await agent.Admin.createProduct(data);\r\n      }\r\n      dispatch(setProduct(response));\r\n      cancelEdit();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box component={Paper} sx={{ p: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n        Product Details\r\n      </Typography>\r\n      <form onSubmit={handleSubmit(handleSubmitData)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <AppTextInput control={control} name=\"name\" label=\"Product name\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppSelectList\r\n              items={brands}\r\n              control={control}\r\n              name=\"brand\"\r\n              label=\"Brand\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppSelectList\r\n              items={types}\r\n              control={control}\r\n              name=\"type\"\r\n              label=\"Type\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppTextInput\r\n              type=\"number\"\r\n              control={control}\r\n              name=\"price\"\r\n              label=\"Price\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppTextInput\r\n              type=\"number\"\r\n              control={control}\r\n              name=\"quantity\"\r\n              label=\"Quantity in Stock\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AppTextInput\r\n              multiline={true}\r\n              rows={4}\r\n              control={control}\r\n              name=\"description\"\r\n              label=\"Description\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <AppDropzone control={control} name=\"file\" />\r\n              {watchFile ? (\r\n                <img\r\n                  src={watchFile.preview}\r\n                  alt=\"preview\"\r\n                  style={{ maxHeight: 200 }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={product?.pictureUrl}\r\n                  alt={product?.name}\r\n                  style={{ maxHeight: 200 }}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mt: 3 }}>\r\n          <Button onClick={cancelEdit} variant=\"contained\" color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <LoadingButton\r\n            loading={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n          >\r\n            Submit\r\n          </LoadingButton>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Typography,\r\n  Button,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Box,\r\n} from '@mui/material';\r\nimport { Edit, Delete } from '@mui/icons-material';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport AppPagination from '../../app/components/AppPagination';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { removeProduct, setPageNumber } from '../catalog/catalogSlice';\r\nimport { useState } from 'react';\r\nimport ProductForm from './ProductForm';\r\nimport { Product } from '../../app/models/product';\r\nimport agent from '../../app/api/agent';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nexport default function Inventory() {\r\n  const { products, metaData } = useProducts();\r\n  const dispatch = useAppDispatch();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(\r\n    undefined\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [target, setTarget] = useState(0);\r\n\r\n  function handleSelectProduct(product: Product) {\r\n    setSelectedProduct(product);\r\n    setEditMode(true);\r\n  }\r\n\r\n  function handleDeleteProduct(id: number) {\r\n    setLoading(true);\r\n    setTarget(id);\r\n    agent.Admin.deleteProduct(id)\r\n      .then(() => dispatch(removeProduct(id)))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false));\r\n  }\r\n\r\n  function cancelEdit() {\r\n    if (selectedProduct) setSelectedProduct(undefined);\r\n    setEditMode(false);\r\n  }\r\n\r\n  if (editMode)\r\n    return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />;\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography sx={{ p: 2 }} variant=\"h4\">\r\n          Inventory\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setEditMode(true)}\r\n          sx={{ m: 2 }}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </Box>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>#</TableCell>\r\n              <TableCell align=\"left\">Product</TableCell>\r\n              <TableCell align=\"right\">Price</TableCell>\r\n              <TableCell align=\"center\">Type</TableCell>\r\n              <TableCell align=\"center\">Brand</TableCell>\r\n              <TableCell align=\"center\">Quantity</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map((product) => (\r\n              <TableRow\r\n                key={product.id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {product.id}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <img\r\n                      src={product.pictureUrl}\r\n                      alt={product.name}\r\n                      style={{ height: 50, marginRight: 20 }}\r\n                    />\r\n                    <span>{product.name}</span>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {currencyFormat(product.price)}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{product.type}</TableCell>\r\n                <TableCell align=\"center\">{product.brand}</TableCell>\r\n                <TableCell align=\"center\">{product.quantity}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    onClick={() => handleSelectProduct(product)}\r\n                    startIcon={<Edit />}\r\n                  />\r\n                  <LoadingButton\r\n                    loading={loading && target === product.id}\r\n                    startIcon={<Delete />}\r\n                    color=\"error\"\r\n                    onClick={() => handleDeleteProduct(product.id)}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {metaData && (\r\n        <Box sx={{ pt: 2 }}>\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) =>\r\n              dispatch(setPageNumber({ pageNumber: page }))\r\n            }\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Container,\r\n  createTheme,\r\n  CssBaseline,\r\n  ThemeProvider,\r\n} from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport AboutPage from '../../features/about/AboutPage';\r\nimport Catalog from '../../features/catalog/Catalog';\r\nimport ProductDetails from '../../features/catalog/ProductDetails';\r\nimport ContactPage from '../../features/contact/ContactPage';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport Header from './Header';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ServerError from '../errors/ServerError';\r\nimport NotFound from '../errors/NotFound';\r\nimport BasketPage from '../../features/basket/BasketPage';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport { useAppDispatch } from '../store/configureStore';\r\nimport { fetchBasketAsync } from '../../features/basket/basketSlice';\r\nimport Login from '../../features/account/Login';\r\nimport Register from '../../features/account/Register';\r\nimport { fetchCurrentUser } from '../../features/account/accountSlice';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport Orders from '../../features/orders/Orders';\r\nimport CheckoutWrapper from '../../features/checkout/CheckoutWrapper';\r\nimport Inventory from '../../features/admin/Inventory';\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const initApp = useCallback(async () => {\r\n    try {\r\n      await dispatch(fetchCurrentUser());\r\n      await dispatch(fetchBasketAsync());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    initApp().then(() => setLoading(false));\r\n  }, [initApp]);\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const paletteType = darkMode ? 'dark' : 'light';\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: paletteType,\r\n      background: {\r\n        default: paletteType === 'light' ? '#eaeaea' : '#121212',\r\n      },\r\n    },\r\n  });\r\n\r\n  function handleThemeChange() {\r\n    setDarkMode(!darkMode);\r\n  }\r\n\r\n  if (loading) return <LoadingComponent message=\"Initialising app...\" />;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar theme=\"colored\" />\r\n      <CssBaseline />\r\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <Container sx={{ mt: 4 }}>\r\n            <Switch>\r\n              <Route exact path=\"/catalog\" component={Catalog} />\r\n              <Route path=\"/catalog/:id\" component={ProductDetails} />\r\n              <Route path=\"/about\" component={AboutPage} />\r\n              <Route path=\"/contact\" component={ContactPage} />\r\n              <Route path=\"/server-error\" component={ServerError} />\r\n              <Route path=\"/basket\" component={BasketPage} />\r\n              <PrivateRoute path=\"/checkout\" component={CheckoutWrapper} />\r\n              <PrivateRoute path=\"/orders\" component={Orders} />\r\n              <PrivateRoute\r\n                /* roles={['Admin']} */\r\n                path=\"/inventory\"\r\n                component={Inventory}\r\n              />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Container>\r\n        )}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}